from airflow import DAG
from airflow.operators.bash import BashOperator
from airflow.hooks.base import BaseHook
from airflow.utils.dates import days_ago
import requests, json, textwrap

def github_alert(context):
    conn = BaseHook.get_connection("github_conn_id")
    token = conn.password
    extra = json.loads(conn.extra or "{}")
    owner = extra["owner"]
    repo = extra["repo"]

    ti = context["task_instance"]
    dag_id = context["dag"].dag_id
    task_id = ti.task_id
    run_date = context["ts"]
    log_url = ti.log_url

    issue_title = f"[Airflow] Task failed: {dag_id} / {task_id}"
    body = textwrap.dedent(f"""
    Airflow task **{task_id}** in DAG **{dag_id}** failed.

    * Run time : {run_date}
    * Log URL  : {log_url}

    _Auto-generated by Airflow callback._
    """)

    resp = requests.post(
        f"https://api.github.com/repos/{owner}/{repo}/issues",
        json={"title": issue_title, "body": body},
        headers={"Authorization": f"token {token}", "Accept": "application/vnd.github+json"}
    )
    if resp.ok:
        print("GitHub alert sent")
    else:
        print("GitHub alert failed:", resp.text)

default_args = {
    "owner": "airflow",
    "on_failure_callback": github_alert,
}

dag = DAG(
    "explainability_check_dag",
    default_args=default_args,
    schedule_interval="@daily",
    start_date=days_ago(1),
    catchup=False,
)

run_check = BashOperator(
    task_id="run_explainability_check",
    bash_command="python /opt/airflow/project/heart_disease_pipeline.py",
    dag=dag,
)